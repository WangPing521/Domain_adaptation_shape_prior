import matplotlib.pyplot as plt

val_dsc1 = [
0.066373508,
0.021603155,
0.059520232,
0.046960509,
0.231200631,
0.319535138,
0.494952984,
0.35782337 ,
0.551173121,
0.509323359,
0.533856437,
0.407591581,
0.455948249,
0.513362966,
0.460343495,
0.442381017,
0.504660487,
0.508576207,
0.463093452,
0.453790624,
0.578583352,
0.581418   ,
0.552130207,
0.628206685,
0.579884231,
0.530128513,
0.627946906,
0.623724431,
0.652293861,
0.191534222,
0.642656177,
0.648499668,
0.669099987,
0.683931828,
0.648305096,
0.652265415,
0.7326224  ,
0.738708228,
0.629039437,
0.657798588,
0.723160833,
0.615914032,
0.729567066,
0.663830161,
0.665257856,
0.71399413 ,
0.649921238,
0.693781227,
0.695362061,
0.729951531,
0.7420647  ,
0.781413332,
0.757337764,
0.738615349,
0.743951678,
0.779630527,
0.743441582,
0.766289055,
0.75739041 ,
0.684218958,
0.715783969,
0.692553148,
0.740901262,
0.773799375,
0.759506494,
0.762114793,
0.769381523,
0.752460718,
0.743228734,
0.775770605,
0.743189469,
0.702877283,
0.753718376,
0.766546369,
0.750279129,
0.753791645,
0.729250118,
0.748750702,
0.739846483,
0.729450047,
0.764143586,
0.751497224,
0.76546371 ,
0.759799615,
0.742278501,
0.736483559,
0.75685297 ,
0.750723928,
0.763062075,
0.756532207,
0.767988101,
0.761886716,
0.759981945,
0.761997983,
0.758918151,
0.758818582,
0.755156249,
0.756120071,
0.752893806,
0.756875396,
]
val_dsc2 = [
0.041077082,
0.024699462,
0.003642369,
0.342549123,
0.330714591,
0.409985445,
0.415255643,
0.321609966,
0.307934352,
0.431343012,
0.544063441,
0.500099942,
0.416235395,
0.519483812,
0.503176212,
0.482259691,
0.527788814,
0.526738957,
0.38757218 ,
0.520376042,
0.608908892,
0.68935138 ,
0.651348531,
0.606019728,
0.613074362,
0.622136965,
0.694568887,
0.714224383,
0.741483942,
0.744434938,
0.769331351,
0.77221632 ,
0.732156843,
0.796769112 ,
0.762433112 ,
0.572499268 ,
0.756576702 ,
0.775169373 ,
0.758701727 ,
0.764323756 ,
0.717881948 ,
0.778785139 ,
0.764706165 ,
0.781943724 ,
0.782906756 ,
0.769342378 ,
0.767116353 ,
0.784099117 ,
0.782007694 ,
0.765653789 ,
0.776387841 ,
0.669990793 ,
0.767774269 ,
0.779559255 ,
0.771686167 ,
0.779299721 ,
0.766768754 ,
0.780709639 ,
0.779095843 ,
0.760493979 ,
0.788194984 ,
0.80539979  ,
0.7734368   ,
0.784749001 ,
0.786186367 ,
0.785504863 ,
0.775325194 ,
0.787354544 ,
0.783470511 ,
0.79627037  ,
0.794051006 ,
0.801862255 ,
0.786005095 ,
0.785695314 ,
0.79102008  ,
0.800204068,
0.793913901,
0.793879971,
0.789492205,
0.786688879,
0.796822101,
0.794192135,
0.791970357,
0.790441215,
0.790726885,
0.785654798,
0.786005914,
0.787463352,
0.790842742,
0.788775995,
0.793091774,
0.789248228,
0.790791914,
0.787492916,
0.787448689,
0.790056139,
0.788921192,
0.787926003,
0.788619339,
0.787941113,
]
val_dsc3 = [
0.029249272,
0.069475245,
0.023401204,
0.128678109,
0.166764547,
0.302620631,
0.391438082,
0.377190871,
0.454345927,
0.605718479,
0.488350801,
0.524581324,
0.4806569  ,
0.619176179,
0.534219284,
0.621257178,
0.61898233  ,
0.635833159 ,
0.693573609 ,
0.647942394 ,
0.464118216 ,
0.608217843 ,
0.666906685 ,
0.674826279 ,
0.683219478 ,
0.604756832 ,
0.697156608 ,
0.643594235 ,
0.763998434 ,
0.749398604 ,
0.760681719 ,
0.724014506 ,
0.806502298 ,
0.774296224 ,
0.761832908 ,
0.778398439 ,
0.77303572  ,
0.755395442 ,
0.711911514 ,
0.785393938 ,
0.722675651 ,
0.774283886 ,
0.751240581 ,
0.760083005 ,
0.764286354 ,
0.753052637 ,
0.744199485 ,
0.753267422 ,
0.749033123 ,
0.740360036 ,
0.776811063 ,
0.758263856 ,
0.763710946 ,
0.762029693 ,
0.762923986 ,
0.771446794 ,
0.765970215 ,
0.7960352   ,
0.761077359 ,
0.782129183 ,
0.774201527,
0.769951418,
0.770041272,
0.806599051,
0.794912994,
0.798394203,
0.796647742,
0.799470678,
0.792954206,
0.80137679 ,
0.797110096,
0.802455842,
0.783749059,
0.800576851,
0.78199245 ,
0.801223382,
0.793354407,
0.79207994 ,
0.79288283 ,
0.78632459 ,
0.781995118,
0.796830475,
0.782704771,
0.791661486,
0.787817389,
0.792145967,
0.793570086,
0.789482877,
0.789676219,
0.788300052,
0.78824614 ,
0.791318074,
0.786396921,
0.787635654,
0.789707392,
0.788694829,
0.788910329,
0.788371757,
0.790106654,
0.788833708,
]
assert len(val_dsc1) == len(val_dsc2)
assert len(val_dsc2) == len(val_dsc3)
steps1 = len(val_dsc1)
val_dsc = []
for j in range(steps1):
    val_dsc.append((val_dsc1[j] + val_dsc2[j] + val_dsc3[j]) / 3)

test_dsc1 =[
0.050593192 ,
0.027344334 ,
0.025613272 ,
0.054266274 ,
0.249572051 ,
0.310298482 ,
0.394162558 ,
0.299485277 ,
0.435924575 ,
0.424770083 ,
0.496019378 ,
0.35429804  ,
0.432997704 ,
0.522950418 ,
0.483531073 ,
0.567979991 ,
0.487108946 ,
0.494861148 ,
0.574934289 ,
0.57189472  ,
0.553620413 ,
0.68883726  ,
0.655219078 ,
0.701977193 ,
0.684780195 ,
0.67214191  ,
0.726433322 ,
0.70621787  ,
0.651340932 ,
0.202786371 ,
0.648212522 ,
0.685637251 ,
0.7621281   ,
0.73450245  ,
0.780826584 ,
0.721700832 ,
0.746574834 ,
0.745871425 ,
0.521774158 ,
0.725778878 ,
0.692282587 ,
0.718022063 ,
0.783385038 ,
0.739328444 ,
0.765377522 ,
0.709949896 ,
0.741914079 ,
0.756251588 ,
0.731766924 ,
0.730501175 ,
0.748082668 ,
0.754125908 ,
0.756401151 ,
0.754198313 ,
0.74403891  ,
0.77257143  ,
0.747653097 ,
0.757892579 ,
0.750502005 ,
0.727841362 ,
0.752861097 ,
0.74759765  ,
0.758409873 ,
0.744101733 ,
0.762061298 ,
0.754374534 ,
0.770344108 ,
0.732846022 ,
0.749081373 ,
0.764776185 ,
0.737284347 ,
0.739820078 ,
0.73230356  ,
0.753319293 ,
0.758111283 ,
0.750718296 ,
0.745142385 ,
0.745537132 ,
0.763436973 ,
0.736938164 ,
0.757742211 ,
0.757607982 ,
0.751570553 ,
0.756647512 ,
0.751638457 ,
0.755235821 ,
0.758236304 ,
0.75231491  ,
0.755875677 ,
0.762819022 ,
0.765740171 ,
0.758615956 ,
0.763778508 ,
0.762012601 ,
0.758114532 ,
0.753639236 ,
0.753806964 ,
0.754937828 ,
0.754933968 ,
0.7572788   ,
]
test_dsc2 =[
0.038478503 ,
3.76E-06    ,
0.000362882 ,
0.334898475 ,
0.278995015 ,
0.39033258  ,
0.258245673 ,
0.509699084 ,
0.405916221 ,
0.406418107 ,
0.443422943 ,
0.554362357 ,
0.463562161 ,
0.510504927 ,
0.608741954 ,
0.586819902 ,
0.527172163 ,
0.606747776 ,
0.57499519  ,
0.573981233 ,
0.673521012 ,
0.658382252 ,
0.592013657 ,
0.659129053 ,
0.478443705 ,
0.658747733 ,
0.704202682 ,
0.726868466 ,
0.701199397 ,
0.691340119 ,
0.743009269 ,
0.742978737 ,
0.682387963 ,
0.681628406 ,
0.746857941 ,
0.601737022 ,
0.73398079  ,
0.736938745 ,
0.724798262 ,
0.736340374 ,
0.584224343 ,
0.712979391 ,
0.718931168 ,
0.746363133 ,
0.780727729 ,
0.746172324 ,
0.746550113 ,
0.75767763  ,
0.756514817 ,
0.726083472 ,
0.783792809 ,
0.755948931 ,
0.766558662 ,
0.785292089 ,
0.781165078 ,
0.742705777 ,
0.759144962 ,
0.76052095  ,
0.768945843 ,
0.745406449 ,
0.754326224 ,
0.731396645 ,
0.722713441 ,
0.743928105 ,
0.74992153  ,
0.765526712 ,
0.751789927 ,
0.760467753 ,
0.743212402 ,
0.746965796 ,
0.755066767 ,
0.758639678 ,
0.752507076 ,
0.764599651 ,
0.774673611 ,
0.775289744 ,
0.760958433 ,
0.767014474 ,
0.7603513   ,
0.763550028 ,
0.766922727 ,
0.76179944  ,
0.767448246 ,
0.764607936 ,
0.767438367 ,
0.765794307 ,
0.766485259 ,
0.770474598 ,
0.763127476 ,
0.764089867 ,
0.768216178 ,
0.766812712 ,
0.769093961 ,
0.763146967 ,
0.764163867 ,
0.766932115 ,
0.766158029 ,
0.763828099 ,
0.767859265 ,
0.763494581 ,
]
test_dsc3 =[
0.0292053   ,
0.048915038 ,
0.012615441 ,
0.110718731 ,
0.168507386 ,
0.319578353 ,
0.329279363 ,
0.240497185 ,
0.324020229 ,
0.523298524 ,
0.321684297 ,
0.443845689 ,
0.458065979 ,
0.584604941 ,
0.591269255 ,
0.624591708 ,
0.591534778 ,
0.595228374 ,
0.487377293 ,
0.643450052 ,
0.384493619 ,
0.579698198 ,
0.743558228 ,
0.672699586 ,
0.630738601 ,
0.695771918 ,
0.694608286 ,
0.7526256   ,
0.771613583 ,
0.766979948 ,
0.753058866 ,
0.747994736 ,
0.705036536 ,
0.747500539 ,
0.783548325 ,
0.758551851 ,
0.75004679  ,
0.755486399 ,
0.773704112 ,
0.678075552 ,
0.735471606 ,
0.769543722 ,
0.75720343  ,
0.747753218 ,
0.754435122 ,
0.773901567 ,
0.744396448 ,
0.625913277 ,
0.776825368 ,
0.725588679 ,
0.761710465 ,
0.73915422  ,
0.742552653 ,
0.741825864 ,
0.786810204 ,
0.755612567 ,
0.767470241 ,
0.769230992 ,
0.754502729 ,
0.765079021 ,
0.74164848  ,
0.803288326 ,
0.754450381 ,
0.766985729 ,
0.783821255 ,
0.788284346 ,
0.778535336 ,
0.788433686 ,
0.789286524 ,
0.779078618 ,
0.764527798 ,
0.771226645 ,
0.784022138 ,
0.77122134  ,
0.77479592  ,
0.767983764 ,
0.770509303 ,
0.778065205 ,
0.77569589  ,
0.76012072  ,
0.771364018 ,
0.76983054  ,
0.773767263 ,
0.774855301 ,
0.780287147 ,
0.774042353 ,
0.774879992 ,
0.76923573  ,
0.768125474 ,
0.765075073 ,
0.756196991 ,
0.765792131 ,
0.765001938 ,
0.763402656 ,
0.761256874 ,
0.765039682 ,
0.764198348 ,
0.761637002 ,
0.759498969 ,
0.762957692 ,
]
assert len(test_dsc1) == len(test_dsc2)
assert len(test_dsc2) == len(test_dsc3)
steps = len(test_dsc1)
test_dsc = []
for k in range(steps):
    test_dsc.append((test_dsc1[k] + test_dsc2[k] + test_dsc3[k])/3)

assert len(val_dsc) == len(test_dsc)
step = len(val_dsc)

x = [i for i in range(step)]
plt.plot(x, val_dsc, label = "val")
plt.plot(x, test_dsc, label = "test")
plt.xlabel('epochs')
plt.ylabel('DSC on MMWHS')
plt.legend()
plt.show()